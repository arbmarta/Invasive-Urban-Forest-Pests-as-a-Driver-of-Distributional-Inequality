import pandas as pd
import matplotlib.pyplot as plt
import numpy as np

cities = ["Calgary", "Edmonton", "Lethbridge", "Regina", "Winnipeg"]

# Tree Count Data
tree_count = {
    'City': ['Calgary', 'Edmonton', 'Lethbridge', 'Regina', 'Winnipeg'],
    'Current Inequality': [0.3357, 0.3211, 0.3693, 0.2393, 0.2062],
    'Following Loss of Susceptible Elm': [0.3841, 0.261, 0.3033, 0.1705, 0.2016],
    'Following Loss of All Elm': [0.3835, 0.2635, 0.3022, 0.168, 0.2108],
    'Following Loss of Ash': [0.3535, 0.3413, 0.3115, 0.3271, 0.289]
}

tree_count_df = pd.DataFrame(tree_count)

# Basal Area Data
basal_area = {
    'City': ['Calgary', 'Edmonton', 'Lethbridge', 'Regina', 'Winnipeg'],
    'Current Inequality': [0.5972, 0.6797, 0.6924, 0.4623, 0.4443],
    'Following Loss of Susceptible Elm': [0.6231, 0.5744, 0.6283, 0.3093, 0.3912],
    'Following Loss of All Elm': [0.6228, 0.575, 0.626, 0.3015, 0.3337],
    'Following Loss of Ash': [0.5969, 0.6933, 0.6872, 0.5136, 0.5236]
}

basal_area_df = pd.DataFrame(basal_area)

# Updating the x-axis categories for the plot
x_labels = ['Existing', 'Following Susceptible \nElm Loss', 'Following All \nElm Loss', 'Following Ash \nLoss']
x_pos = np.arange(len(x_labels))

# Extracting Gini coefficient data for each city and stage
gini_basal = basal_area_df.set_index('City').T
gini_tree_count = tree_count_df.set_index('City').T

# Plot for Basal Area Gini Coefficients
plt.figure(figsize=(8, 6))

# Loop through each city to scatter its Gini coefficients
for city in cities:
    plt.scatter(x_pos, gini_basal[city], label=city, s=100)

# Set labels, title, and ticks
plt.xticks(x_pos, x_labels)
plt.xlabel('Basal Area Inequalities', fontweight='bold')
plt.ylabel('Gini Indices')

# Adjust legend position to be outside the plot
plt.legend(bbox_to_anchor=(1.05, 1), loc='upper left')

# Display the plot
plt.tight_layout()
plt.show()

# Plot for Tree Count Gini Coefficients
plt.figure(figsize=(8, 6))

# Loop through each city to scatter its Gini coefficients
for city in cities:
    plt.scatter(x_pos, gini_tree_count[city], label=city, s=100)

# Set labels, title, and ticks
plt.xticks(x_pos, x_labels)
plt.xlabel('Tree Count Inequalities', fontweight='bold')
plt.ylabel('Gini Indices')

# Adjust legend position to be outside the plot
plt.legend(bbox_to_anchor=(1.05, 1), loc='upper left')

# Display the plot
plt.tight_layout()
plt.show()
